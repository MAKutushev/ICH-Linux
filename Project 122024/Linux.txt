Отчёт о восстановлении работоспособности Linux-сервера

Описание задачи

В рамках учебного проекта требовалось восстановить работоспособность веб-сервера на базе Linux. Известно, что на сервере запущены веб-приложение, веб-сервер Apache и настроены резервные копии. Однако сервис перестал функционировать по неизвестной причине.

Этапы работы

1. Проверка доступности сайта

Получив адрес сервера (http://18.192.103.67/), было установлено, что сайт недоступен.

2. Подключение к серверу

Команда для подключения:

ssh -i ich.pem ec2-user@18.192.103.67  
 # Подключаемся к серверу через SSH, используя ключ доступа
# -i указывает приватный ключ для аутентификации 

3. Проверка статуса Apache

sudo service httpd status  
# Показывает текущий статус Apache HTTP-сервера  

Результат: Active: inactive (dead)

4. Запуск Apache

sudo service httpd start  
# Запускает Apache HTTP-сервер  

Проверка статуса показала, что сервис был успешно запущен.

5. Проверка конфигурации приложения

Файл конфигурации находился по пути:

/home/ec2-user/LocalSettings\ \(5\).php  
# Указываем путь к файлу с экранированными пробелами

Попытка копирования:

cp /home/ec2-user/LocalSettings\ \(5\).php /var/www/html/mediawiki/LocalSettings.php  
# Копируем файл в нужную директорию

Ошибка: No space left on device  
# Указывает на отсутствие свободного места на диске

6. Освобождение дискового пространства

Проверка доступного пространства:

df -h
# Проверяем использование дискового пространства  
# -h выводит информацию в удобном для чтения формате (например, в МБ или ГБ)  


Результат: раздел /dev/nvme0n1p1 был полностью заполнен.

Поиск больших файлов:

find / -type f -size +100M  
# -type f ищет только файлы, -size +100M ищет файлы размером более 100 МБ  

Обнаружено:

/var/log/httpd/access_log (7.0G)  
# Огромный файл логов Apache

& Другие файлы логов

Очистка файла логов:

sudo echo "" > /var/log/httpd/access_log  
# Очищаем файл логов, освобождая место

Проверка свободного места показала, что проблема была решена.

7. Коррекция конфигурационного файла

Копирование файла настроек прошло успешно. Также было исправлено значение wgServer в конфигурационном файле на актуальный IP-адрес сервера.

8. Настройка автоматической очистки логов

Создан скрипт /home/ec2-user/backup_logs.sh:

#!/bin/bash

# Директория с логами Apache
LOG_DIR="/var/log/httpd"

# Имя файла логов  
LOG_FILE="access_log"  

# Директория для резервных копий
BACKUP_DIR="/var/backups"  

# Максимальное количество резервных копий
MAX_BACKUPS=3  

# Текущая дата для имени архива
DATE=$(date +%Y%m%d)  

# Имя архива
ARCHIVE="$BACKUP_DIR/$LOG_FILE-$DATE.tar.gz"  

# Архивирование
tar -czf "$ARCHIVE" "$LOG_DIR/$LOG_FILE"  
# Создаем архив из файла логов
# -c создаёт новый архив, -z сжимает его с помощью gzip, -f указывает имя выходного файла  

# Удаление старых архивов
find "$BACKUP_DIR" -type f -name "$LOG_FILE-*.tar.gz" -mtime +3 -exec rm {} \;  
# Удаляем архивы старше 3 дней
# -mtime +3 ищет файлы старше 3 дней, -exec выполняет команду rm для каждого найденного файла  

Добавление задания в crontab:

0 0 * * * /home/ec2-user/backup_logs.sh  
# Запускаем скрипт ежедневно в полночь

Вывод

В процессе выполнения проекта были успешно решены следующие задачи:

Перезапущен веб-сервер Apache.

Освобождено дисковое пространство.

Исправлены ошибки конфигурации приложения.

Настроено автоматическое архивирование логов.

В результате сайт был восстановлен и снова стал доступным.

